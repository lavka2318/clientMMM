{
  "version": 3,
  "sources": ["../../.pnpm/react-movable@3.2.0_react-dom@18.2.0_react@18.2.0/node_modules/react-movable/lib/List.js", "../../.pnpm/react-movable@3.2.0_react-dom@18.2.0_react@18.2.0/node_modules/react-movable/lib/utils.js"],
  "sourcesContent": ["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { getTranslateOffset, transformItem, setItemTransition, binarySearch, schd, isTouchEvent, checkIfInteractive } from './utils.js';\nconst AUTOSCROLL_ACTIVE_OFFSET = 200;\nconst AUTOSCROLL_SPEED_RATIO = 10;\nconst AUTOSCROLL_DELTA_THRESHOLD = 10;\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.listRef = React.createRef();\n        this.ghostRef = React.createRef();\n        this.topOffsets = [];\n        this.itemTranslateOffsets = [];\n        this.initialYOffset = 0;\n        this.lastScroll = 0;\n        this.lastYOffset = 0;\n        this.lastListYOffset = 0;\n        this.needle = -1;\n        this.afterIndex = -2;\n        this.state = {\n            itemDragged: -1,\n            itemDraggedOutOfBounds: -1,\n            selectedItem: -1,\n            initialX: 0,\n            initialY: 0,\n            targetX: 0,\n            targetY: 0,\n            targetHeight: 0,\n            targetWidth: 0,\n            liveText: '',\n            scrollingSpeed: 0,\n            scrollWindow: false\n        };\n        this.doScrolling = () => {\n            const { scrollingSpeed, scrollWindow } = this.state;\n            const listEl = this.listRef.current;\n            window.requestAnimationFrame(() => {\n                if (scrollWindow) {\n                    window.scrollTo(window.pageXOffset, window.pageYOffset + scrollingSpeed * 1.5);\n                }\n                else {\n                    listEl.scrollTop += scrollingSpeed;\n                }\n                if (scrollingSpeed !== 0) {\n                    this.doScrolling();\n                }\n            });\n        };\n        this.getChildren = () => {\n            if (this.listRef && this.listRef.current) {\n                return Array.from(this.listRef.current.children);\n            }\n            console.warn('No items found in the List container. Did you forget to pass & spread the `props` param in renderList?');\n            return [];\n        };\n        this.calculateOffsets = () => {\n            this.topOffsets = this.getChildren().map((item) => item.getBoundingClientRect().top);\n            this.itemTranslateOffsets = this.getChildren().map((item) => getTranslateOffset(item));\n        };\n        this.getTargetIndex = (e) => {\n            return this.getChildren().findIndex((child) => child === e.target || child.contains(e.target));\n        };\n        this.onMouseOrTouchStart = (e) => {\n            if (this.dropTimeout && this.state.itemDragged > -1) {\n                window.clearTimeout(this.dropTimeout);\n                this.finishDrop();\n            }\n            const isTouch = isTouchEvent(e);\n            if (!isTouch && e.button !== 0)\n                return;\n            const index = this.getTargetIndex(e);\n            if (index === -1 ||\n                // @ts-ignore\n                (this.props.values[index] && this.props.values[index].disabled)) {\n                if (this.state.selectedItem !== -1) {\n                    this.setState({ selectedItem: -1 });\n                    this.finishDrop();\n                }\n                return;\n            }\n            const listItemTouched = this.getChildren()[index];\n            const handle = listItemTouched.querySelector('[data-movable-handle]');\n            if (handle && !handle.contains(e.target)) {\n                return;\n            }\n            if (checkIfInteractive(e.target, listItemTouched)) {\n                return;\n            }\n            e.preventDefault();\n            this.props.beforeDrag &&\n                this.props.beforeDrag({\n                    elements: this.getChildren(),\n                    index\n                });\n            if (isTouch) {\n                const opts = { passive: false };\n                listItemTouched.style.touchAction = 'none';\n                document.addEventListener('touchend', this.schdOnEnd, opts);\n                document.addEventListener('touchmove', this.schdOnTouchMove, opts);\n                document.addEventListener('touchcancel', this.schdOnEnd, opts);\n            }\n            else {\n                document.addEventListener('mousemove', this.schdOnMouseMove);\n                document.addEventListener('mouseup', this.schdOnEnd);\n                const listItemDragged = this.getChildren()[this.state.itemDragged];\n                if (listItemDragged && listItemDragged.style) {\n                    listItemDragged.style.touchAction = '';\n                }\n            }\n            this.onStart(listItemTouched, isTouch ? e.touches[0].clientX : e.clientX, isTouch ? e.touches[0].clientY : e.clientY, index);\n        };\n        this.getYOffset = () => {\n            const listScroll = this.listRef.current\n                ? this.listRef.current.scrollTop\n                : 0;\n            return window.pageYOffset + listScroll;\n        };\n        this.onStart = (target, clientX, clientY, index) => {\n            if (this.state.selectedItem > -1) {\n                this.setState({ selectedItem: -1 });\n                this.needle = -1;\n            }\n            const targetRect = target.getBoundingClientRect();\n            const targetStyles = window.getComputedStyle(target);\n            this.calculateOffsets();\n            this.initialYOffset = this.getYOffset();\n            this.lastYOffset = window.pageYOffset;\n            this.lastListYOffset = this.listRef.current.scrollTop;\n            this.setState({\n                itemDragged: index,\n                targetX: targetRect.left - parseInt(targetStyles['margin-left'], 10),\n                targetY: targetRect.top - parseInt(targetStyles['margin-top'], 10),\n                targetHeight: targetRect.height,\n                targetWidth: targetRect.width,\n                initialX: clientX,\n                initialY: clientY\n            });\n        };\n        this.onMouseMove = (e) => {\n            e.cancelable && e.preventDefault();\n            this.onMove(e.clientX, e.clientY);\n        };\n        this.onTouchMove = (e) => {\n            e.cancelable && e.preventDefault();\n            this.onMove(e.touches[0].clientX, e.touches[0].clientY);\n        };\n        this.onWheel = (e) => {\n            if (this.state.itemDragged < 0)\n                return;\n            this.lastScroll = this.listRef.current.scrollTop += e.deltaY;\n            this.moveOtherItems();\n        };\n        this.onMove = (clientX, clientY) => {\n            if (this.state.itemDragged === -1)\n                return null;\n            transformItem(this.ghostRef.current, clientY - this.state.initialY, this.props.lockVertically ? 0 : clientX - this.state.initialX);\n            this.autoScrolling(clientY, clientY - this.state.initialY);\n            this.moveOtherItems();\n        };\n        this.moveOtherItems = () => {\n            const targetRect = this.ghostRef.current.getBoundingClientRect();\n            const itemVerticalCenter = targetRect.top + targetRect.height / 2;\n            const offset = getTranslateOffset(this.getChildren()[this.state.itemDragged]);\n            const currentYOffset = this.getYOffset();\n            // adjust offsets if scrolling happens during the item movement\n            if (this.initialYOffset !== currentYOffset) {\n                this.topOffsets = this.topOffsets.map((offset) => offset - (currentYOffset - this.initialYOffset));\n                this.initialYOffset = currentYOffset;\n            }\n            if (this.isDraggedItemOutOfBounds() && this.props.removableByMove) {\n                this.afterIndex = this.topOffsets.length + 1;\n            }\n            else {\n                this.afterIndex = binarySearch(this.topOffsets, itemVerticalCenter);\n            }\n            this.animateItems(this.afterIndex === -1 ? 0 : this.afterIndex, this.state.itemDragged, offset);\n        };\n        this.autoScrolling = (clientY, delta) => {\n            const { top, bottom, height } = this.listRef.current.getBoundingClientRect();\n            const viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n            // autoscrolling for the window (down)\n            if (bottom > viewportHeight &&\n                viewportHeight - clientY < AUTOSCROLL_ACTIVE_OFFSET &&\n                delta > AUTOSCROLL_DELTA_THRESHOLD) {\n                this.setState({\n                    scrollingSpeed: Math.min(Math.round((AUTOSCROLL_ACTIVE_OFFSET - (viewportHeight - clientY)) /\n                        AUTOSCROLL_SPEED_RATIO), Math.round((delta - AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO)),\n                    scrollWindow: true\n                });\n                // autoscrolling for the window (up)\n            }\n            else if (top < 0 &&\n                clientY < AUTOSCROLL_ACTIVE_OFFSET &&\n                delta < -AUTOSCROLL_DELTA_THRESHOLD) {\n                this.setState({\n                    scrollingSpeed: Math.max(Math.round((AUTOSCROLL_ACTIVE_OFFSET - clientY) / -AUTOSCROLL_SPEED_RATIO), Math.round((delta + AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO)),\n                    scrollWindow: true\n                });\n            }\n            else {\n                if (this.state.scrollWindow && this.state.scrollingSpeed !== 0) {\n                    this.setState({ scrollingSpeed: 0, scrollWindow: false });\n                }\n                // autoscrolling for containers with overflow\n                if (height + 20 < this.listRef.current.scrollHeight) {\n                    let scrollingSpeed = 0;\n                    // (up)\n                    if (clientY - top < AUTOSCROLL_ACTIVE_OFFSET &&\n                        delta < -AUTOSCROLL_DELTA_THRESHOLD) {\n                        scrollingSpeed = Math.max(Math.round((AUTOSCROLL_ACTIVE_OFFSET - (clientY - top)) /\n                            -AUTOSCROLL_SPEED_RATIO), Math.round((delta + AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO));\n                        // (down)\n                    }\n                    else if (bottom - clientY < AUTOSCROLL_ACTIVE_OFFSET &&\n                        delta > AUTOSCROLL_DELTA_THRESHOLD) {\n                        scrollingSpeed = Math.min(Math.round((AUTOSCROLL_ACTIVE_OFFSET - (bottom - clientY)) /\n                            AUTOSCROLL_SPEED_RATIO), Math.round((delta - AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO));\n                    }\n                    if (this.state.scrollingSpeed !== scrollingSpeed) {\n                        this.setState({ scrollingSpeed });\n                    }\n                }\n            }\n        };\n        this.animateItems = (needle, movedItem, offset, animateMovedItem = false) => {\n            this.getChildren().forEach((item, i) => {\n                setItemTransition(item, this.props.transitionDuration);\n                if (movedItem === i && animateMovedItem) {\n                    if (movedItem === needle) {\n                        return transformItem(item, null);\n                    }\n                    transformItem(item, movedItem < needle\n                        ? this.itemTranslateOffsets\n                            .slice(movedItem + 1, needle + 1)\n                            .reduce((a, b) => a + b, 0)\n                        : this.itemTranslateOffsets\n                            .slice(needle, movedItem)\n                            .reduce((a, b) => a + b, 0) * -1);\n                }\n                else if (movedItem < needle && i > movedItem && i <= needle) {\n                    transformItem(item, -offset);\n                }\n                else if (i < movedItem && movedItem > needle && i >= needle) {\n                    transformItem(item, offset);\n                }\n                else {\n                    transformItem(item, null);\n                }\n            });\n        };\n        this.isDraggedItemOutOfBounds = () => {\n            const initialRect = this.getChildren()[this.state.itemDragged].getBoundingClientRect();\n            const targetRect = this.ghostRef.current.getBoundingClientRect();\n            if (Math.abs(initialRect.left - targetRect.left) > targetRect.width) {\n                if (this.state.itemDraggedOutOfBounds === -1) {\n                    this.setState({ itemDraggedOutOfBounds: this.state.itemDragged });\n                }\n                return true;\n            }\n            if (this.state.itemDraggedOutOfBounds > -1) {\n                this.setState({ itemDraggedOutOfBounds: -1 });\n            }\n            return false;\n        };\n        this.onEnd = (e) => {\n            e.cancelable && e.preventDefault();\n            document.removeEventListener('mousemove', this.schdOnMouseMove);\n            document.removeEventListener('touchmove', this.schdOnTouchMove);\n            document.removeEventListener('mouseup', this.schdOnEnd);\n            document.removeEventListener('touchup', this.schdOnEnd);\n            document.removeEventListener('touchcancel', this.schdOnEnd);\n            const removeItem = this.props.removableByMove && this.isDraggedItemOutOfBounds();\n            if (!removeItem &&\n                this.props.transitionDuration > 0 &&\n                this.afterIndex !== -2) {\n                // animate drop\n                schd(() => {\n                    setItemTransition(this.ghostRef.current, this.props.transitionDuration, 'cubic-bezier(.2,1,.1,1)');\n                    if (this.afterIndex < 1 && this.state.itemDragged === 0) {\n                        transformItem(this.ghostRef.current, 0, 0);\n                    }\n                    else {\n                        transformItem(this.ghostRef.current, \n                        // compensate window scroll\n                        -(window.pageYOffset - this.lastYOffset) +\n                            // compensate container scroll\n                            -(this.listRef.current.scrollTop - this.lastListYOffset) +\n                            (this.state.itemDragged < this.afterIndex\n                                ? this.itemTranslateOffsets\n                                    .slice(this.state.itemDragged + 1, this.afterIndex + 1)\n                                    .reduce((a, b) => a + b, 0)\n                                : this.itemTranslateOffsets\n                                    .slice(this.afterIndex < 0 ? 0 : this.afterIndex, this.state.itemDragged)\n                                    .reduce((a, b) => a + b, 0) * -1), 0);\n                    }\n                })();\n            }\n            this.dropTimeout = window.setTimeout(this.finishDrop, removeItem || this.afterIndex === -2 ? 0 : this.props.transitionDuration);\n        };\n        this.finishDrop = () => {\n            const removeItem = this.props.removableByMove && this.isDraggedItemOutOfBounds();\n            if (removeItem ||\n                (this.afterIndex > -2 && this.state.itemDragged !== this.afterIndex)) {\n                this.props.onChange({\n                    oldIndex: this.state.itemDragged,\n                    newIndex: removeItem ? -1 : Math.max(this.afterIndex, 0),\n                    targetRect: this.ghostRef.current.getBoundingClientRect()\n                });\n            }\n            this.getChildren().forEach((item) => {\n                setItemTransition(item, 0);\n                transformItem(item, null);\n                item.style.touchAction = '';\n            });\n            this.setState({ itemDragged: -1, scrollingSpeed: 0 });\n            this.afterIndex = -2;\n            // sometimes the scroll gets messed up after the drop, fix:\n            if (this.lastScroll > 0) {\n                this.listRef.current.scrollTop = this.lastScroll;\n                this.lastScroll = 0;\n            }\n        };\n        this.onKeyDown = (e) => {\n            const selectedItem = this.state.selectedItem;\n            const index = this.getTargetIndex(e);\n            if (checkIfInteractive(e.target, e.currentTarget)) {\n                return;\n            }\n            if (index === -1)\n                return;\n            if (e.key === ' ') {\n                e.preventDefault();\n                if (selectedItem === index) {\n                    if (selectedItem !== this.needle) {\n                        this.getChildren().forEach((item) => {\n                            setItemTransition(item, 0);\n                            transformItem(item, null);\n                        });\n                        this.props.onChange({\n                            oldIndex: selectedItem,\n                            newIndex: this.needle,\n                            targetRect: this.getChildren()[this.needle].getBoundingClientRect()\n                        });\n                        this.getChildren()[this.needle].focus();\n                    }\n                    this.setState({\n                        selectedItem: -1,\n                        liveText: this.props.voiceover.dropped(selectedItem + 1, this.needle + 1)\n                    });\n                    this.needle = -1;\n                }\n                else {\n                    this.setState({\n                        selectedItem: index,\n                        liveText: this.props.voiceover.lifted(index + 1)\n                    });\n                    this.needle = index;\n                    this.calculateOffsets();\n                }\n            }\n            if ((e.key === 'ArrowDown' || e.key === 'j') &&\n                selectedItem > -1 &&\n                this.needle < this.props.values.length - 1) {\n                e.preventDefault();\n                const offset = getTranslateOffset(this.getChildren()[selectedItem]);\n                this.needle++;\n                this.animateItems(this.needle, selectedItem, offset, true);\n                this.setState({\n                    liveText: this.props.voiceover.moved(this.needle + 1, false)\n                });\n            }\n            if ((e.key === 'ArrowUp' || e.key === 'k') &&\n                selectedItem > -1 &&\n                this.needle > 0) {\n                e.preventDefault();\n                const offset = getTranslateOffset(this.getChildren()[selectedItem]);\n                this.needle--;\n                this.animateItems(this.needle, selectedItem, offset, true);\n                this.setState({\n                    liveText: this.props.voiceover.moved(this.needle + 1, true)\n                });\n            }\n            if (e.key === 'Escape' && selectedItem > -1) {\n                this.getChildren().forEach((item) => {\n                    setItemTransition(item, 0);\n                    transformItem(item, null);\n                });\n                this.setState({\n                    selectedItem: -1,\n                    liveText: this.props.voiceover.canceled(selectedItem + 1)\n                });\n                this.needle = -1;\n            }\n            if ((e.key === 'Tab' || e.key === 'Enter') && selectedItem > -1) {\n                e.preventDefault();\n            }\n        };\n        this.schdOnMouseMove = schd(this.onMouseMove);\n        this.schdOnTouchMove = schd(this.onTouchMove);\n        this.schdOnEnd = schd(this.onEnd);\n    }\n    componentDidMount() {\n        this.calculateOffsets();\n        document.addEventListener('touchstart', this.onMouseOrTouchStart, {\n            passive: false,\n            capture: false\n        });\n        document.addEventListener('mousedown', this.onMouseOrTouchStart);\n    }\n    componentDidUpdate(_prevProps, prevState) {\n        if (prevState.scrollingSpeed !== this.state.scrollingSpeed &&\n            prevState.scrollingSpeed === 0) {\n            this.doScrolling();\n        }\n    }\n    componentWillUnmount() {\n        document.removeEventListener('touchstart', this.onMouseOrTouchStart);\n        document.removeEventListener('mousedown', this.onMouseOrTouchStart);\n        if (this.dropTimeout) {\n            window.clearTimeout(this.dropTimeout);\n        }\n        this.schdOnMouseMove.cancel();\n        this.schdOnTouchMove.cancel();\n        this.schdOnEnd.cancel();\n    }\n    render() {\n        const baseStyle = {\n            userSelect: 'none',\n            WebkitUserSelect: 'none',\n            MozUserSelect: 'none',\n            msUserSelect: 'none',\n            boxSizing: 'border-box',\n            position: 'relative'\n        };\n        const ghostStyle = {\n            ...baseStyle,\n            top: this.state.targetY,\n            left: this.state.targetX,\n            width: this.state.targetWidth,\n            height: this.state.targetHeight,\n            position: 'fixed',\n            marginTop: 0\n        };\n        return (React.createElement(React.Fragment, null,\n            this.props.renderList({\n                children: this.props.values.map((value, index) => {\n                    const isHidden = index === this.state.itemDragged;\n                    const isSelected = index === this.state.selectedItem;\n                    const isDisabled = \n                    // @ts-ignore\n                    this.props.values[index] && this.props.values[index].disabled;\n                    const props = {\n                        key: index,\n                        tabIndex: isDisabled ? -1 : 0,\n                        'aria-roledescription': this.props.voiceover.item(index + 1),\n                        onKeyDown: this.onKeyDown,\n                        style: {\n                            ...baseStyle,\n                            visibility: isHidden ? 'hidden' : undefined,\n                            zIndex: isSelected ? 5000 : 0\n                        }\n                    };\n                    return this.props.renderItem({\n                        value,\n                        props,\n                        index,\n                        isDragged: false,\n                        isSelected,\n                        isOutOfBounds: false\n                    });\n                }),\n                isDragged: this.state.itemDragged > -1,\n                props: {\n                    ref: this.listRef\n                }\n            }),\n            this.state.itemDragged > -1 &&\n                ReactDOM.createPortal(this.props.renderItem({\n                    value: this.props.values[this.state.itemDragged],\n                    props: {\n                        ref: this.ghostRef,\n                        style: ghostStyle,\n                        onWheel: this.onWheel\n                    },\n                    index: this.state.itemDragged,\n                    isDragged: true,\n                    isSelected: false,\n                    isOutOfBounds: this.state.itemDraggedOutOfBounds > -1\n                }), this.props.container || document.body),\n            React.createElement(\"div\", { \"aria-live\": \"assertive\", role: \"log\", \"aria-atomic\": \"true\", style: {\n                    position: 'absolute',\n                    width: '1px',\n                    height: '1px',\n                    margin: '-1px',\n                    border: '0px',\n                    padding: '0px',\n                    overflow: 'hidden',\n                    clip: 'rect(0px, 0px, 0px, 0px)',\n                    clipPath: 'inset(100%)'\n                } }, this.state.liveText)));\n    }\n}\nList.defaultProps = {\n    transitionDuration: 300,\n    lockVertically: false,\n    removableByMove: false,\n    voiceover: {\n        item: (position) => `You are currently at a draggable item at position ${position}. Press space bar to lift.`,\n        lifted: (position) => `You have lifted item at position ${position}. Press j to move down, k to move up, space bar to drop and escape to cancel.`,\n        moved: (position, up) => `You have moved the lifted item ${up ? 'up' : 'down'} to position ${position}. Press j to move down, k to move up, space bar to drop and escape to cancel.`,\n        dropped: (from, to) => `You have dropped the item. It has moved from position ${from} to ${to}.`,\n        canceled: (position) => `You have cancelled the movement. The item has returned to its starting position of ${position}.`\n    }\n};\nexport default List;\n", "export function arrayMove(array, from, to) {\n    array = array.slice();\n    array.splice(to < 0 ? array.length + to : to, 0, array.splice(from, 1)[0]);\n    return array;\n}\nexport function arrayRemove(array, index) {\n    array = array.slice();\n    array.splice(index, 1);\n    return array;\n}\nexport function getTranslateOffset(element) {\n    const style = window.getComputedStyle(element);\n    return (Math.max(parseInt(style['margin-top'], 10), parseInt(style['margin-bottom'], 10)) + element.getBoundingClientRect().height);\n}\nexport function isTouchEvent(event) {\n    return ((event.touches && event.touches.length) ||\n        (event.changedTouches && event.changedTouches.length));\n}\nexport function transformItem(element, offsetY = 0, offsetX = 0) {\n    if (!element)\n        return;\n    if (offsetY === null || offsetX === null) {\n        element.style.removeProperty('transform');\n        return;\n    }\n    element.style.transform = `translate(${offsetX}px, ${offsetY}px)`;\n}\nexport function isItemTransformed(element) {\n    return !!element.style.transform;\n}\nexport function setItemTransition(element, duration, timing) {\n    if (element) {\n        element.style['transition'] = `transform ${duration}ms${timing ? ` ${timing}` : ''}`;\n    }\n}\n// returns the \"slot\" for the targetValue, aka where it should go\n// in an ordered \"array\", it starts with -1 index\nexport function binarySearch(array, targetValue) {\n    let min = 0;\n    let max = array.length - 1;\n    let guess;\n    while (min <= max) {\n        guess = Math.floor((max + min) / 2);\n        if (!array[guess + 1] ||\n            (array[guess] <= targetValue && array[guess + 1] >= targetValue)) {\n            return guess;\n        }\n        else if (array[guess] < targetValue && array[guess + 1] < targetValue) {\n            min = guess + 1;\n        }\n        else {\n            max = guess - 1;\n        }\n    }\n    return -1;\n}\n// adapted from https://github.com/alexreardon/raf-schd\nexport const schd = (fn) => {\n    let lastArgs = [];\n    let frameId = null;\n    const wrapperFn = (...args) => {\n        lastArgs = args;\n        if (frameId) {\n            return;\n        }\n        frameId = requestAnimationFrame(() => {\n            frameId = null;\n            fn(...lastArgs);\n        });\n    };\n    wrapperFn.cancel = () => {\n        if (frameId) {\n            cancelAnimationFrame(frameId);\n        }\n    };\n    return wrapperFn;\n};\nexport function checkIfInteractive(target, rootElement) {\n    const DISABLED_ELEMENTS = [\n        'input',\n        'textarea',\n        'select',\n        'option',\n        'optgroup',\n        'video',\n        'audio',\n        'button',\n        'a'\n    ];\n    const DISABLED_ROLES = ['button', 'link', 'checkbox', 'tab'];\n    while (target !== rootElement) {\n        if (target.getAttribute('data-movable-handle')) {\n            return false;\n        }\n        if (DISABLED_ELEMENTS.includes(target.tagName.toLowerCase())) {\n            return true;\n        }\n        const role = target.getAttribute('role');\n        if (role && DISABLED_ROLES.includes(role.toLowerCase())) {\n            return true;\n        }\n        if (target.tagName.toLowerCase() === 'label' &&\n            target.hasAttribute('for')) {\n            return true;\n        }\n        if (target.tagName)\n            target = target.parentElement;\n    }\n    return false;\n}\n"],
  "mappings": "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",
  "names": ["offset"]
}
